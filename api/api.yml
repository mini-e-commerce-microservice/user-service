openapi: 3.0.1
info:
 contact: {}
 title: user service api
 version: 1.0.0
servers:
  - url: http://localhost:3001
paths:
  /v1/profile:
    get:
      operationId: V1GetProfile
      description: needed auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1GetProfile200Response'
        '400':
          description: BAD_REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - profile
  /v1/verify-email-user:
    put:
      operationId: V1VerifyEmailUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1VerifyEmailUserRequestBody'
      responses:
        '204':
          description: NO CONTENT (SUCCESSFULLY VERIFY USER)
        '400':
          description: BAD_REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/register:
    post:
      operationId: V1RegisterPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1RegisterPostRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1RegisterPost200Response'
        '400':
          description: BAD_REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - register
  /v1/otp:
    post:
      operationId: V1SendOtpPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SendOtpPostRequestBody'
      responses:
        '204':
          description: NO_CONTENT
        '400':
          description: BAD_REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - otp
    put:
      operationId: V1VerifyOtpPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1VerifyOtpPutRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1VerifyOtpPutResponse'
        '400':
          description: BAD_REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - otp
components:
  schemas:
    V1VerifyEmailUserRequestBody:
      type: object
      properties:
        token:
          type: string
          description: you can get when verify otp token
      required:
        - token
    V1VerifyOtpPutResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    V1VerifyOtpPutRequestBody:
      type: object
      properties:
        destination_address:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required"
        usecase:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,oneof=verify-email"
        type:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,oneof=email"
        code:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required"
      required:
        - type
        - code
        - usecase
        - destination_address
    V1SendOtpPostRequestBody:
      type: object
      properties:
        usecase:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,oneof=verify-email"
        type:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,oneof=email"
        destination_address:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required"
      required:
        - type
        - destination_address
        - usecase
    V1RegisterPost200Response:
      type: object
      properties:
        upload_profile_image:
          $ref: '#/components/schemas/FileUploadResponse'
        upload_background_image:
          $ref: '#/components/schemas/FileUploadResponse'
        id:
          type: integer
          format: int64
      required:
        - id
    V1RegisterPostRequestBody:
      type: object
      properties:
        image_profile:
          $ref: '#/components/schemas/FileUploadRequest'
        background_image:
          $ref: '#/components/schemas/FileUploadRequest'
        email:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,max=255,min=6,email"
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,max=50,min=6"
        re_password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,eqfield=Password"
        full_name:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "required,max=100,min=6"
        register_as:
          type: integer
          format: int8
          description: |-
            - 1 = merchant
            - 2 = customer
          x-oapi-codegen-extra-tags:
            validate: "required,oneof=1 2"
      required:
        - email
        - full_name
        - re_password
        - password
        - register_as
    V1GetProfile200Response:
      type: object
      properties:
        id:
          type: integer
          format: int64
        full_name:
          type: string
        image:
          type: string
        background_image:
          type: string
        email:
          type: string
      required:
        - id
        - full_name
        - image
        - background_image
        - email
    FileUploadRequest:
      type: object
      properties:
        checksum_sha256:
          type: string
          description: sha256 checksum file
          x-oapi-codegen-extra-tags:
            binding: required
        identifier:
          type: string
          description: identifier
          x-oapi-codegen-extra-tags:
            binding: required
        mime_type:
          type: string
          description: 'common mime type: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types'
          x-oapi-codegen-extra-tags:
            binding: required
        original_filename:
          type: string
          description: original filename
          x-oapi-codegen-extra-tags:
            binding: required
        size:
          type: integer
          format: int64
          description: sizes in bytes
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - checksum_sha256
        - identifier
        - mime_type
        - original_filename
        - size
    FileUploadResponse:
      type: object
      properties:
        identifier:
          type: string
          description: identifier response from request
        upload_expired_at:
          type: string
          format: date-time
        upload_url:
          type: string
        minio_form_data:
          type: object
          additionalProperties:
            type: string
      required:
        - identifier
        - upload_expired_at
        - upload_url
        - minio_form_data
    Error400:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - errors
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message

